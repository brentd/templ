// Code generated by templ@(devel) DO NOT EDIT.

package testhtml

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bufio"

func render(p person) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, writer io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		w, ok := writer.(io.StringWriter)
		if !ok {
			templw := bufio.NewWriter(writer)
			w = templw
			defer templw.Flush()
		}
		_, err = w.WriteString("<div>")
		if err != nil {
			return err
		}
		_, err = w.WriteString("<h1>")
		if err != nil {
			return err
		}
		_, err = w.WriteString(templ.EscapeString(p.name))
		if err != nil {
			return err
		}
		_, err = w.WriteString("</h1>")
		if err != nil {
			return err
		}
		err = templ.RenderScripts(ctx, w, )
		if err != nil {
			return err
		}
		_, err = w.WriteString("<div")
		if err != nil {
			return err
		}
		_, err = w.WriteString(" style=\"font-family: &#39;sans-serif&#39;\"")
		if err != nil {
			return err
		}
		_, err = w.WriteString(" id=\"test\"")
		if err != nil {
			return err
		}
		_, err = w.WriteString(" data-contents=")
		if err != nil {
			return err
		}
		_, err = w.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = w.WriteString(templ.EscapeString(`something with "quotes" and a <tag>`))
		if err != nil {
			return err
		}
		_, err = w.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = w.WriteString(">")
		if err != nil {
			return err
		}
		_, err = w.WriteString("<div>")
		if err != nil {
			return err
		}
		var_1 := `email:`
		_, err = w.WriteString(var_1)
		if err != nil {
			return err
		}
		err = templ.RenderScripts(ctx, w, )
		if err != nil {
			return err
		}
		_, err = w.WriteString("<a")
		if err != nil {
			return err
		}
		_, err = w.WriteString(" href=")
		if err != nil {
			return err
		}
		_, err = w.WriteString("\"")
		if err != nil {
			return err
		}
		var var_2 templ.SafeURL = templ.URL("mailto: " + p.email)
		_, err = w.WriteString(templ.EscapeString(string(var_2)))
		if err != nil {
			return err
		}
		_, err = w.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = w.WriteString(">")
		if err != nil {
			return err
		}
		_, err = w.WriteString(templ.EscapeString(p.email))
		if err != nil {
			return err
		}
		_, err = w.WriteString("</a>")
		if err != nil {
			return err
		}
		_, err = w.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = w.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = w.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = w.WriteString("<hr")
		if err != nil {
			return err
		}
		if true {
			_, err = w.WriteString(" noshade")
			if err != nil {
				return err
			}
		}
		_, err = w.WriteString(">")
		if err != nil {
			return err
		}
		_, err = w.WriteString("<hr")
		if err != nil {
			return err
		}
		_, err = w.WriteString(" optionA")
		if err != nil {
			return err
		}
		if true {
			_, err = w.WriteString(" optionB")
			if err != nil {
				return err
			}
		}
		_, err = w.WriteString(" optionC=\"other\"")
		if err != nil {
			return err
		}
		if false {
			_, err = w.WriteString(" optionD")
			if err != nil {
				return err
			}
		}
		_, err = w.WriteString(">")
		if err != nil {
			return err
		}
		_, err = w.WriteString("<hr")
		if err != nil {
			return err
		}
		_, err = w.WriteString(" noshade")
		if err != nil {
			return err
		}
		_, err = w.WriteString(">")
		if err != nil {
			return err
		}
		return err
	})
}

