// Code generated by templ@(devel) DO NOT EDIT.

package testcssusage

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bufio"
import "strings"

func green() templ.CSSClass {
	var templCSSBuilder strings.Builder
	templCSSBuilder.WriteString(`color:#00ff00;`)
	templCSSID := templ.CSSID(`green`, templCSSBuilder.String())
	return templ.ComponentCSSClass{
		ID: templCSSID,
		Class: templ.SafeCSS(`.` + templCSSID + `{` + templCSSBuilder.String() + `}`),
	}
}

func className() templ.CSSClass {
	var templCSSBuilder strings.Builder
	templCSSBuilder.WriteString(`background-color:#ffffff;`)
	templCSSBuilder.WriteString(string(templ.SanitizeCSS(`color`, red)))
	templCSSID := templ.CSSID(`className`, templCSSBuilder.String())
	return templ.ComponentCSSClass{
		ID: templCSSID,
		Class: templ.SafeCSS(`.` + templCSSID + `{` + templCSSBuilder.String() + `}`),
	}
}

func Button(text string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, writer io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		w, ok := writer.(io.StringWriter)
		if !ok {
			templw := bufio.NewWriter(writer)
			w = templw
			defer templw.Flush()
		}
		var var_1 templ.CSSClasses = templ.Classes(className(), templ.Class("&&&unsafe"), templ.SafeClass("safe"))
		err = templ.RenderCSS(ctx, w, var_1)
		if err != nil {
			return err
		}
		err = templ.RenderScripts(ctx, w, )
		if err != nil {
			return err
		}
		_, err = w.WriteString("<button")
		if err != nil {
			return err
		}
		_, err = w.WriteString(" class=")
		if err != nil {
			return err
		}
		_, err = w.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = w.WriteString(templ.EscapeString(var_1.String()))
		if err != nil {
			return err
		}
		_, err = w.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = w.WriteString(" type=\"button\"")
		if err != nil {
			return err
		}
		_, err = w.WriteString(">")
		if err != nil {
			return err
		}
		_, err = w.WriteString(templ.EscapeString(text))
		if err != nil {
			return err
		}
		_, err = w.WriteString("</button>")
		if err != nil {
			return err
		}
		return err
	})
}

func ThreeButtons() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, writer io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		w, ok := writer.(io.StringWriter)
		if !ok {
			templw := bufio.NewWriter(writer)
			w = templw
			defer templw.Flush()
		}
		err = Button("A").Render(ctx, w.(io.Writer))
		if err != nil {
			return err
		}
		err = Button("B").Render(ctx, w.(io.Writer))
		if err != nil {
			return err
		}
		var var_2 templ.CSSClasses = templ.Classes(green())
		err = templ.RenderCSS(ctx, w, var_2)
		if err != nil {
			return err
		}
		err = templ.RenderScripts(ctx, w, )
		if err != nil {
			return err
		}
		_, err = w.WriteString("<button")
		if err != nil {
			return err
		}
		_, err = w.WriteString(" class=")
		if err != nil {
			return err
		}
		_, err = w.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = w.WriteString(templ.EscapeString(var_2.String()))
		if err != nil {
			return err
		}
		_, err = w.WriteString("\"")
		if err != nil {
			return err
		}
		_, err = w.WriteString(" type=\"button\"")
		if err != nil {
			return err
		}
		_, err = w.WriteString(">")
		if err != nil {
			return err
		}
		_, err = w.WriteString(templ.EscapeString("Green"))
		if err != nil {
			return err
		}
		_, err = w.WriteString("</button>")
		if err != nil {
			return err
		}
		return err
	})
}

